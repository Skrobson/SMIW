
szklarnia.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000838  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000088c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000088c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008bc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b0  00000000  00000000  000008f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000142c  00000000  00000000  000009a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000822  00000000  00000000  00001dd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000812  00000000  00000000  000025f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000300  00000000  00000000  00002e08  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000067b  00000000  00000000  00003108  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001304  00000000  00000000  00003783  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  00004a87  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 02 	jmp	0x454	; 0x454 <__ctors_end>
   4:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
   8:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
   c:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  10:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  14:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  18:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  1c:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  20:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  24:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  28:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  2c:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  30:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  34:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  38:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  3c:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  40:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  44:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  48:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  4c:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>
  50:	0c 94 3c 02 	jmp	0x478	; 0x478 <__bad_interrupt>

00000054 <Waveshare12864>:
	...
  74:	11 11 00 9c 64 42 1c 78 7a 78 ef b8 30 89 8c 70     ....dB.xzx..0..p
  84:	19 91 88 9c f4 63 1e 78 7a 79 ef 3c 78 89 9e f0     .....c.xzy.<x...
  94:	09 91 88 b1 84 63 12 40 42 43 02 24 cc c9 30 80     .....c.@BC.$..0.
  a4:	09 91 88 b1 84 67 12 40 42 42 02 24 84 c9 20 80     .....g.@BB.$.. .
  b4:	09 92 89 b0 84 65 12 40 42 42 02 24 84 c9 20 c0     .....e.@BB.$.. .
  c4:	0a b2 4d 1c c7 e5 96 78 7a 72 02 2c 84 a9 20 60     ..M....xzr.,.. `
  d4:	0a a2 45 14 67 e4 9c 70 72 52 02 38 84 a9 20 30     ..E.g..prR.8.. 0
  e4:	0a 63 c5 30 34 67 94 40 42 42 02 28 84 b9 20 10     .c.04g.@BB.(.. .
  f4:	06 67 c7 30 14 6f 92 40 42 42 02 24 84 99 20 10     .g.0.o.@BB.$.. .
 104:	06 64 66 30 14 68 92 40 42 43 02 24 8c 99 20 10     .df0.h.@BC.$.. .
 114:	06 64 22 3d b4 68 d3 78 7a 79 e2 26 78 89 be f0     .d"=.h.xzy.&x...
 124:	04 44 22 1c e4 48 51 78 7a 79 e2 22 70 89 9e e0     .D"..HQxzy."p...
	...
 1d4:	3f ff f0 00 00 00 00 00 00 00 00 00 00 00 00 00     ?...............
 1e4:	3f ff fe 00 00 00 00 00 00 00 00 00 00 00 00 00     ?...............
 1f4:	3f ff ff 80 00 08 30 00 00 00 00 10 00 00 00 00     ?.....0.........
 204:	3f ff f7 c0 06 db 30 3f ff fc 00 70 00 7f ff f0     ?.....0?...p....
 214:	3f ff e7 e0 0e db 30 3f ff fc 7f ff f8 7f ff f0     ?.....0?........
 224:	3f ff c7 f0 0c db 7e 00 18 00 7f ff f8 7f ff f0     ?.....~.........
 234:	3f ff 87 f0 1c db fe 00 18 00 7f ff f8 00 00 f0     ?...............
 244:	3f ff 07 f8 1c db f0 3f ff fc 60 70 38 00 01 e0     ?......?..`p8...
 254:	3f ff 87 fc 18 db c0 3f ff f8 60 70 38 00 01 c0     ?......?..`p8...
 264:	20 c3 86 3c 06 ff 00 30 18 18 60 70 38 00 03 c0      ..<...0..`p8...
 274:	30 c3 0c 3c 06 ff 0c 30 18 18 60 70 38 00 03 80     0..<...0..`p8...
 284:	30 43 0c 1e 0e ff 6c 33 18 d8 60 70 38 07 ff 00     0C....l3..`p8...
 294:	30 00 1c 1e 0e 00 6c 33 9b d8 70 70 38 07 ff 00     0.....l3..pp8...
 2a4:	38 00 08 0e 1c fe 7c 30 18 18 7f ff f8 07 fe 00     8.....|0........
 2b4:	38 00 08 0e 1c fe 3c 30 19 18 7f ff f8 07 fe 00     8.....<0........
 2c4:	38 00 00 06 1c fe 38 31 9b 98 60 70 38 00 0e 00     8.....81..`p8...
 2d4:	3c 10 00 86 0c 00 38 33 99 d8 60 70 38 00 0e 00     <.....83..`p8...
 2e4:	3c 10 00 82 0c 00 38 00 00 00 60 70 38 00 0e 00     <.....8...`p8...
 2f4:	3c 18 41 86 0c 7e 38 00 00 00 60 70 38 ff ff f0     <.A..~8...`p8...
 304:	1e 38 41 86 0c 7e 18 3f ff f8 60 70 38 ff ff f0     .8A..~.?..`p8...
 314:	1e 38 e3 8e 0c 7e 18 3f ff f8 60 70 38 ff ff f0     .8...~.?..`p8...
 324:	1e 7c e2 0e 0c 66 38 00 00 18 7f ff f8 00 0e 00     .|...f8.........
 334:	1f ff fe 1e 0c 66 38 00 00 18 7f ff f0 00 0e 00     .....f8.........
 344:	0f ff fe 0e 0c 66 38 1f ff f8 7f ff f0 00 0e 00     .....f8.........
 354:	0f ff fe 1e 0c 66 3c 1f ff f8 00 70 00 00 0e 00     .....f<....p....
 364:	07 ff fe 3e 0c 66 3c 10 00 38 00 70 00 00 0e 00     ...>.f<..8.p....
 374:	03 ff fe 7e 0c 66 7c 00 00 18 00 70 00 00 1e 00     ...~.f|....p....
 384:	01 ff fe fe 0c e7 ee 00 00 18 00 7f f8 3f fe 00     .............?..
 394:	00 ff ff fe 0c e7 ee 3f ff f8 00 3f f8 3f fe 00     .......?...?.?..
 3a4:	00 7f ff fe 0c c7 c6 3f ff f8 00 3f f8 3f fc 00     .......?...?.?..
 3b4:	00 1f ff fe 00 00 00 00 00 00 00 00 00 00 00 00     ................
 3c4:	00 03 ff fe 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00000454 <__ctors_end>:
 454:	11 24       	eor	r1, r1
 456:	1f be       	out	0x3f, r1	; 63
 458:	cf e5       	ldi	r28, 0x5F	; 95
 45a:	d8 e0       	ldi	r29, 0x08	; 8
 45c:	de bf       	out	0x3e, r29	; 62
 45e:	cd bf       	out	0x3d, r28	; 61

00000460 <__do_clear_bss>:
 460:	20 e0       	ldi	r18, 0x00	; 0
 462:	a0 e6       	ldi	r26, 0x60	; 96
 464:	b0 e0       	ldi	r27, 0x00	; 0
 466:	01 c0       	rjmp	.+2      	; 0x46a <.do_clear_bss_start>

00000468 <.do_clear_bss_loop>:
 468:	1d 92       	st	X+, r1

0000046a <.do_clear_bss_start>:
 46a:	a0 36       	cpi	r26, 0x60	; 96
 46c:	b2 07       	cpc	r27, r18
 46e:	e1 f7       	brne	.-8      	; 0x468 <.do_clear_bss_loop>
 470:	0e 94 3e 02 	call	0x47c	; 0x47c <main>
 474:	0c 94 1a 04 	jmp	0x834	; 0x834 <_exit>

00000478 <__bad_interrupt>:
 478:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000047c <main>:
#include <avr/io.h>
#include <util/delay.h>
//#include "SPI.h"
#include "ssd1306.h"
int main(void)
{
 47c:	cf 93       	push	r28
 47e:	df 93       	push	r29
 480:	cd b7       	in	r28, 0x3d	; 61
 482:	de b7       	in	r29, 0x3e	; 62
 484:	d4 50       	subi	r29, 0x04	; 4
 486:	0f b6       	in	r0, 0x3f	; 63
 488:	f8 94       	cli
 48a:	de bf       	out	0x3e, r29	; 62
 48c:	0f be       	out	0x3f, r0	; 63
 48e:	cd bf       	out	0x3d, r28	; 61
	uint8_t oled_buf[WIDTH * HEIGHT / 8];
    /* Replace with your application code */
	SSD1306_begin();
 490:	0e 94 8f 02 	call	0x51e	; 0x51e <_Z13SSD1306_beginv>
	
	SSD1306_clear(oled_buf);
 494:	ce 01       	movw	r24, r28
 496:	01 96       	adiw	r24, 0x01	; 1
 498:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <_Z13SSD1306_clearPh>
	SSD1306_bitmap(0, 0, Waveshare12864, 128, 64, oled_buf);
 49c:	ce 01       	movw	r24, r28
 49e:	01 96       	adiw	r24, 0x01	; 1
 4a0:	7c 01       	movw	r14, r24
 4a2:	00 e4       	ldi	r16, 0x40	; 64
 4a4:	20 e8       	ldi	r18, 0x80	; 128
 4a6:	44 e5       	ldi	r20, 0x54	; 84
 4a8:	50 e0       	ldi	r21, 0x00	; 0
 4aa:	60 e0       	ldi	r22, 0x00	; 0
 4ac:	80 e0       	ldi	r24, 0x00	; 0
 4ae:	0e 94 56 03 	call	0x6ac	; 0x6ac <_Z14SSD1306_bitmaphhPKhhhPh>
	SSD1306_display(oled_buf);
 4b2:	c7 01       	movw	r24, r14
 4b4:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <_Z15SSD1306_displayPh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4b8:	9f e7       	ldi	r25, 0x7F	; 127
 4ba:	2a e1       	ldi	r18, 0x1A	; 26
 4bc:	86 e0       	ldi	r24, 0x06	; 6
 4be:	91 50       	subi	r25, 0x01	; 1
 4c0:	20 40       	sbci	r18, 0x00	; 0
 4c2:	80 40       	sbci	r24, 0x00	; 0
 4c4:	e1 f7       	brne	.-8      	; 0x4be <main+0x42>
 4c6:	00 c0       	rjmp	.+0      	; 0x4c8 <main+0x4c>
 4c8:	00 00       	nop
 4ca:	ff cf       	rjmp	.-2      	; 0x4ca <main+0x4e>

000004cc <_Z13spiInitMasterv>:
                x++;
                break;
            }
        }
    }
}
 4cc:	87 b3       	in	r24, 0x17	; 23
 4ce:	88 6b       	ori	r24, 0xB8	; 184
 4d0:	87 bb       	out	0x17, r24	; 23
 4d2:	bc 98       	cbi	0x17, 4	; 23
 4d4:	6c 9a       	sbi	0x0d, 4	; 13
 4d6:	8d b1       	in	r24, 0x0d	; 13
 4d8:	83 60       	ori	r24, 0x03	; 3
 4da:	8d b9       	out	0x0d, r24	; 13
 4dc:	6e 9a       	sbi	0x0d, 6	; 13
 4de:	08 95       	ret

000004e0 <_Z8SPIWritePhi>:
 4e0:	16 16       	cp	r1, r22
 4e2:	17 06       	cpc	r1, r23
 4e4:	54 f4       	brge	.+20     	; 0x4fa <_Z8SPIWritePhi+0x1a>
 4e6:	fc 01       	movw	r30, r24
 4e8:	68 0f       	add	r22, r24
 4ea:	79 1f       	adc	r23, r25
 4ec:	91 91       	ld	r25, Z+
 4ee:	9f b9       	out	0x0f, r25	; 15
 4f0:	77 9b       	sbis	0x0e, 7	; 14
 4f2:	fe cf       	rjmp	.-4      	; 0x4f0 <_Z8SPIWritePhi+0x10>
 4f4:	e6 17       	cp	r30, r22
 4f6:	f7 07       	cpc	r31, r23
 4f8:	c9 f7       	brne	.-14     	; 0x4ec <_Z8SPIWritePhi+0xc>
 4fa:	08 95       	ret

000004fc <_Z7commandh>:
 4fc:	cf 93       	push	r28
 4fe:	df 93       	push	r29
 500:	1f 92       	push	r1
 502:	cd b7       	in	r28, 0x3d	; 61
 504:	de b7       	in	r29, 0x3e	; 62
 506:	89 83       	std	Y+1, r24	; 0x01
 508:	c3 98       	cbi	0x18, 3	; 24
 50a:	61 e0       	ldi	r22, 0x01	; 1
 50c:	70 e0       	ldi	r23, 0x00	; 0
 50e:	ce 01       	movw	r24, r28
 510:	01 96       	adiw	r24, 0x01	; 1
 512:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z8SPIWritePhi>
 516:	0f 90       	pop	r0
 518:	df 91       	pop	r29
 51a:	cf 91       	pop	r28
 51c:	08 95       	ret

0000051e <_Z13SSD1306_beginv>:
 51e:	0e 94 66 02 	call	0x4cc	; 0x4cc <_Z13spiInitMasterv>
 522:	bc 9a       	sbi	0x17, 4	; 23
 524:	bb 9a       	sbi	0x17, 3	; 23
 526:	ba 9a       	sbi	0x17, 2	; 23
 528:	c4 98       	cbi	0x18, 4	; 24
 52a:	c2 9a       	sbi	0x18, 2	; 24
 52c:	83 ec       	ldi	r24, 0xC3	; 195
 52e:	99 e0       	ldi	r25, 0x09	; 9
 530:	01 97       	sbiw	r24, 0x01	; 1
 532:	f1 f7       	brne	.-4      	; 0x530 <_Z13SSD1306_beginv+0x12>
 534:	00 c0       	rjmp	.+0      	; 0x536 <_Z13SSD1306_beginv+0x18>
 536:	00 00       	nop
 538:	c2 98       	cbi	0x18, 2	; 24
 53a:	83 ec       	ldi	r24, 0xC3	; 195
 53c:	99 e0       	ldi	r25, 0x09	; 9
 53e:	01 97       	sbiw	r24, 0x01	; 1
 540:	f1 f7       	brne	.-4      	; 0x53e <_Z13SSD1306_beginv+0x20>
 542:	00 c0       	rjmp	.+0      	; 0x544 <_Z13SSD1306_beginv+0x26>
 544:	00 00       	nop
 546:	c2 9a       	sbi	0x18, 2	; 24
 548:	8e ea       	ldi	r24, 0xAE	; 174
 54a:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 54e:	85 ed       	ldi	r24, 0xD5	; 213
 550:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 554:	80 e8       	ldi	r24, 0x80	; 128
 556:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 55a:	88 ea       	ldi	r24, 0xA8	; 168
 55c:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 560:	8f e3       	ldi	r24, 0x3F	; 63
 562:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 566:	83 ed       	ldi	r24, 0xD3	; 211
 568:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 56c:	80 e0       	ldi	r24, 0x00	; 0
 56e:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 572:	80 e4       	ldi	r24, 0x40	; 64
 574:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 578:	8d e8       	ldi	r24, 0x8D	; 141
 57a:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 57e:	84 e1       	ldi	r24, 0x14	; 20
 580:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 584:	80 e2       	ldi	r24, 0x20	; 32
 586:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 58a:	80 e0       	ldi	r24, 0x00	; 0
 58c:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 590:	81 ea       	ldi	r24, 0xA1	; 161
 592:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 596:	88 ec       	ldi	r24, 0xC8	; 200
 598:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 59c:	8a ed       	ldi	r24, 0xDA	; 218
 59e:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 5a2:	82 e1       	ldi	r24, 0x12	; 18
 5a4:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 5a8:	81 e8       	ldi	r24, 0x81	; 129
 5aa:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 5ae:	8f ec       	ldi	r24, 0xCF	; 207
 5b0:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 5b4:	89 ed       	ldi	r24, 0xD9	; 217
 5b6:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 5ba:	81 ef       	ldi	r24, 0xF1	; 241
 5bc:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 5c0:	8b ed       	ldi	r24, 0xDB	; 219
 5c2:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 5c6:	80 e4       	ldi	r24, 0x40	; 64
 5c8:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 5cc:	84 ea       	ldi	r24, 0xA4	; 164
 5ce:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 5d2:	86 ea       	ldi	r24, 0xA6	; 166
 5d4:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 5d8:	8f ea       	ldi	r24, 0xAF	; 175
 5da:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
 5de:	08 95       	ret

000005e0 <_Z13SSD1306_clearPh>:
 5e0:	fc 01       	movw	r30, r24
 5e2:	9c 5f       	subi	r25, 0xFC	; 252
 5e4:	11 92       	st	Z+, r1
 5e6:	e8 17       	cp	r30, r24
 5e8:	f9 07       	cpc	r31, r25
 5ea:	e1 f7       	brne	.-8      	; 0x5e4 <_Z13SSD1306_clearPh+0x4>
 5ec:	08 95       	ret

000005ee <_Z13SSD1306_pixeliicPh>:
 5ee:	81 38       	cpi	r24, 0x81	; 129
 5f0:	91 05       	cpc	r25, r1
 5f2:	0c f0       	brlt	.+2      	; 0x5f6 <_Z13SSD1306_pixeliicPh+0x8>
 5f4:	5a c0       	rjmp	.+180    	; 0x6aa <_Z13SSD1306_pixeliicPh+0xbc>
 5f6:	61 34       	cpi	r22, 0x41	; 65
 5f8:	71 05       	cpc	r23, r1
 5fa:	0c f0       	brlt	.+2      	; 0x5fe <_Z13SSD1306_pixeliicPh+0x10>
 5fc:	56 c0       	rjmp	.+172    	; 0x6aa <_Z13SSD1306_pixeliicPh+0xbc>
 5fe:	44 23       	and	r20, r20
 600:	51 f1       	breq	.+84     	; 0x656 <_Z13SSD1306_pixeliicPh+0x68>
 602:	ab 01       	movw	r20, r22
 604:	77 23       	and	r23, r23
 606:	14 f4       	brge	.+4      	; 0x60c <_Z13SSD1306_pixeliicPh+0x1e>
 608:	49 5f       	subi	r20, 0xF9	; 249
 60a:	5f 4f       	sbci	r21, 0xFF	; 255
 60c:	55 95       	asr	r21
 60e:	47 95       	ror	r20
 610:	55 95       	asr	r21
 612:	47 95       	ror	r20
 614:	55 95       	asr	r21
 616:	47 95       	ror	r20
 618:	56 95       	lsr	r21
 61a:	54 2f       	mov	r21, r20
 61c:	44 27       	eor	r20, r20
 61e:	57 95       	ror	r21
 620:	47 95       	ror	r20
 622:	84 0f       	add	r24, r20
 624:	95 1f       	adc	r25, r21
 626:	f9 01       	movw	r30, r18
 628:	e8 0f       	add	r30, r24
 62a:	f9 1f       	adc	r31, r25
 62c:	67 70       	andi	r22, 0x07	; 7
 62e:	70 78       	andi	r23, 0x80	; 128
 630:	77 23       	and	r23, r23
 632:	34 f4       	brge	.+12     	; 0x640 <_Z13SSD1306_pixeliicPh+0x52>
 634:	61 50       	subi	r22, 0x01	; 1
 636:	71 09       	sbc	r23, r1
 638:	68 6f       	ori	r22, 0xF8	; 248
 63a:	7f 6f       	ori	r23, 0xFF	; 255
 63c:	6f 5f       	subi	r22, 0xFF	; 255
 63e:	7f 4f       	sbci	r23, 0xFF	; 255
 640:	81 e0       	ldi	r24, 0x01	; 1
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	02 c0       	rjmp	.+4      	; 0x64a <_Z13SSD1306_pixeliicPh+0x5c>
 646:	88 0f       	add	r24, r24
 648:	99 1f       	adc	r25, r25
 64a:	6a 95       	dec	r22
 64c:	e2 f7       	brpl	.-8      	; 0x646 <_Z13SSD1306_pixeliicPh+0x58>
 64e:	90 81       	ld	r25, Z
 650:	89 2b       	or	r24, r25
 652:	80 83       	st	Z, r24
 654:	08 95       	ret
 656:	ab 01       	movw	r20, r22
 658:	77 23       	and	r23, r23
 65a:	14 f4       	brge	.+4      	; 0x660 <_Z13SSD1306_pixeliicPh+0x72>
 65c:	49 5f       	subi	r20, 0xF9	; 249
 65e:	5f 4f       	sbci	r21, 0xFF	; 255
 660:	55 95       	asr	r21
 662:	47 95       	ror	r20
 664:	55 95       	asr	r21
 666:	47 95       	ror	r20
 668:	55 95       	asr	r21
 66a:	47 95       	ror	r20
 66c:	56 95       	lsr	r21
 66e:	54 2f       	mov	r21, r20
 670:	44 27       	eor	r20, r20
 672:	57 95       	ror	r21
 674:	47 95       	ror	r20
 676:	84 0f       	add	r24, r20
 678:	95 1f       	adc	r25, r21
 67a:	f9 01       	movw	r30, r18
 67c:	e8 0f       	add	r30, r24
 67e:	f9 1f       	adc	r31, r25
 680:	67 70       	andi	r22, 0x07	; 7
 682:	70 78       	andi	r23, 0x80	; 128
 684:	77 23       	and	r23, r23
 686:	34 f4       	brge	.+12     	; 0x694 <_Z13SSD1306_pixeliicPh+0xa6>
 688:	61 50       	subi	r22, 0x01	; 1
 68a:	71 09       	sbc	r23, r1
 68c:	68 6f       	ori	r22, 0xF8	; 248
 68e:	7f 6f       	ori	r23, 0xFF	; 255
 690:	6f 5f       	subi	r22, 0xFF	; 255
 692:	7f 4f       	sbci	r23, 0xFF	; 255
 694:	81 e0       	ldi	r24, 0x01	; 1
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	02 c0       	rjmp	.+4      	; 0x69e <_Z13SSD1306_pixeliicPh+0xb0>
 69a:	88 0f       	add	r24, r24
 69c:	99 1f       	adc	r25, r25
 69e:	6a 95       	dec	r22
 6a0:	e2 f7       	brpl	.-8      	; 0x69a <_Z13SSD1306_pixeliicPh+0xac>
 6a2:	80 95       	com	r24
 6a4:	90 81       	ld	r25, Z
 6a6:	89 23       	and	r24, r25
 6a8:	80 83       	st	Z, r24
 6aa:	08 95       	ret

000006ac <_Z14SSD1306_bitmaphhPKhhhPh>:

void SSD1306_bitmap(uint8_t x,uint8_t y,const uint8_t *pBmp, uint8_t chWidth, uint8_t chHeight, uint8_t* buffer)
{
 6ac:	2f 92       	push	r2
 6ae:	3f 92       	push	r3
 6b0:	4f 92       	push	r4
 6b2:	5f 92       	push	r5
 6b4:	6f 92       	push	r6
 6b6:	7f 92       	push	r7
 6b8:	8f 92       	push	r8
 6ba:	9f 92       	push	r9
 6bc:	af 92       	push	r10
 6be:	bf 92       	push	r11
 6c0:	cf 92       	push	r12
 6c2:	df 92       	push	r13
 6c4:	ef 92       	push	r14
 6c6:	ff 92       	push	r15
 6c8:	0f 93       	push	r16
 6ca:	1f 93       	push	r17
 6cc:	cf 93       	push	r28
 6ce:	df 93       	push	r29
 6d0:	cd b7       	in	r28, 0x3d	; 61
 6d2:	de b7       	in	r29, 0x3e	; 62
 6d4:	29 97       	sbiw	r28, 0x09	; 9
 6d6:	0f b6       	in	r0, 0x3f	; 63
 6d8:	f8 94       	cli
 6da:	de bf       	out	0x3e, r29	; 62
 6dc:	0f be       	out	0x3f, r0	; 63
 6de:	cd bf       	out	0x3d, r28	; 61
	uint8_t i, j, byteWidth = (chWidth + 7)/8;
 6e0:	a2 2f       	mov	r26, r18
 6e2:	b0 e0       	ldi	r27, 0x00	; 0
 6e4:	17 96       	adiw	r26, 0x07	; 7
 6e6:	fd 01       	movw	r30, r26
 6e8:	0a f4       	brpl	.+2      	; 0x6ec <_Z14SSD1306_bitmaphhPKhhhPh+0x40>
 6ea:	37 96       	adiw	r30, 0x07	; 7
 6ec:	f5 95       	asr	r31
 6ee:	e7 95       	ror	r30
 6f0:	f5 95       	asr	r31
 6f2:	e7 95       	ror	r30
 6f4:	f5 95       	asr	r31
 6f6:	e7 95       	ror	r30
	for(j = 0;j < chHeight;j++){
 6f8:	00 23       	and	r16, r16
 6fa:	09 f4       	brne	.+2      	; 0x6fe <_Z14SSD1306_bitmaphhPKhhhPh+0x52>
 6fc:	64 c0       	rjmp	.+200    	; 0x7c6 <_Z14SSD1306_bitmaphhPKhhhPh+0x11a>
 6fe:	fa 82       	std	Y+2, r15	; 0x02
 700:	e9 82       	std	Y+1, r14	; 0x01
 702:	2b 83       	std	Y+3, r18	; 0x03
 704:	6a 01       	movw	r12, r20
 706:	01 50       	subi	r16, 0x01	; 1
 708:	20 2f       	mov	r18, r16
 70a:	30 e0       	ldi	r19, 0x00	; 0
 70c:	19 01       	movw	r2, r18
 70e:	9f ef       	ldi	r25, 0xFF	; 255
 710:	29 1a       	sub	r2, r25
 712:	39 0a       	sbc	r3, r25
 714:	61 2c       	mov	r6, r1
 716:	71 2c       	mov	r7, r1
		for(i = 0;i <chWidth;i++){
			if(pgm_read_byte(pBmp + j * byteWidth + i / 8) & (128 >> (i & 7))){
 718:	9f 01       	movw	r18, r30
 71a:	33 27       	eor	r19, r19
 71c:	3d 83       	std	Y+5, r19	; 0x05
 71e:	2c 83       	std	Y+4, r18	; 0x04
 720:	eb 80       	ldd	r14, Y+3	; 0x03
 722:	ea 94       	dec	r14
 724:	f1 2c       	mov	r15, r1
 726:	3f ef       	ldi	r19, 0xFF	; 255
 728:	e3 1a       	sub	r14, r19
 72a:	f3 0a       	sbc	r15, r19
 72c:	68 94       	set
 72e:	88 24       	eor	r8, r8
 730:	87 f8       	bld	r8, 7
 732:	91 2c       	mov	r9, r1
				SSD1306_pixel(x + i,y + j, 1, buffer);
 734:	26 2f       	mov	r18, r22
 736:	30 e0       	ldi	r19, 0x00	; 0
 738:	3f 83       	std	Y+7, r19	; 0x07
 73a:	2e 83       	std	Y+6, r18	; 0x06
 73c:	48 2e       	mov	r4, r24
 73e:	51 2c       	mov	r5, r1

void SSD1306_bitmap(uint8_t x,uint8_t y,const uint8_t *pBmp, uint8_t chWidth, uint8_t chHeight, uint8_t* buffer)
{
	uint8_t i, j, byteWidth = (chWidth + 7)/8;
	for(j = 0;j < chHeight;j++){
		for(i = 0;i <chWidth;i++){
 740:	3b 81       	ldd	r19, Y+3	; 0x03
 742:	33 23       	and	r19, r19
 744:	c9 f1       	breq	.+114    	; 0x7b8 <_Z14SSD1306_bitmaphhPKhhhPh+0x10c>
			if(pgm_read_byte(pBmp + j * byteWidth + i / 8) & (128 >> (i & 7))){
 746:	8c 81       	ldd	r24, Y+4	; 0x04
 748:	9d 81       	ldd	r25, Y+5	; 0x05
 74a:	86 9d       	mul	r24, r6
 74c:	80 01       	movw	r16, r0
 74e:	87 9d       	mul	r24, r7
 750:	10 0d       	add	r17, r0
 752:	96 9d       	mul	r25, r6
 754:	10 0d       	add	r17, r0
 756:	11 24       	eor	r1, r1
 758:	19 86       	std	Y+9, r1	; 0x09
 75a:	18 86       	std	Y+8, r1	; 0x08
				SSD1306_pixel(x + i,y + j, 1, buffer);
 75c:	ae 80       	ldd	r10, Y+6	; 0x06
 75e:	bf 80       	ldd	r11, Y+7	; 0x07
 760:	a6 0c       	add	r10, r6
 762:	b7 1c       	adc	r11, r7
void SSD1306_bitmap(uint8_t x,uint8_t y,const uint8_t *pBmp, uint8_t chWidth, uint8_t chHeight, uint8_t* buffer)
{
	uint8_t i, j, byteWidth = (chWidth + 7)/8;
	for(j = 0;j < chHeight;j++){
		for(i = 0;i <chWidth;i++){
			if(pgm_read_byte(pBmp + j * byteWidth + i / 8) & (128 >> (i & 7))){
 764:	88 85       	ldd	r24, Y+8	; 0x08
 766:	86 95       	lsr	r24
 768:	86 95       	lsr	r24
 76a:	86 95       	lsr	r24
 76c:	f8 01       	movw	r30, r16
 76e:	e8 0f       	add	r30, r24
 770:	f1 1d       	adc	r31, r1
 772:	ec 0d       	add	r30, r12
 774:	fd 1d       	adc	r31, r13
 776:	84 91       	lpm	r24, Z
 778:	98 85       	ldd	r25, Y+8	; 0x08
 77a:	97 70       	andi	r25, 0x07	; 7
 77c:	94 01       	movw	r18, r8
 77e:	02 c0       	rjmp	.+4      	; 0x784 <_Z14SSD1306_bitmaphhPKhhhPh+0xd8>
 780:	35 95       	asr	r19
 782:	27 95       	ror	r18
 784:	9a 95       	dec	r25
 786:	e2 f7       	brpl	.-8      	; 0x780 <_Z14SSD1306_bitmaphhPKhhhPh+0xd4>
 788:	e8 2f       	mov	r30, r24
 78a:	f0 e0       	ldi	r31, 0x00	; 0
 78c:	e2 23       	and	r30, r18
 78e:	f3 23       	and	r31, r19
 790:	ef 2b       	or	r30, r31
 792:	51 f0       	breq	.+20     	; 0x7a8 <_Z14SSD1306_bitmaphhPKhhhPh+0xfc>
				SSD1306_pixel(x + i,y + j, 1, buffer);
 794:	29 81       	ldd	r18, Y+1	; 0x01
 796:	3a 81       	ldd	r19, Y+2	; 0x02
 798:	41 e0       	ldi	r20, 0x01	; 1
 79a:	b5 01       	movw	r22, r10
 79c:	88 85       	ldd	r24, Y+8	; 0x08
 79e:	99 85       	ldd	r25, Y+9	; 0x09
 7a0:	84 0d       	add	r24, r4
 7a2:	95 1d       	adc	r25, r5
 7a4:	0e 94 f7 02 	call	0x5ee	; 0x5ee <_Z13SSD1306_pixeliicPh>
 7a8:	88 85       	ldd	r24, Y+8	; 0x08
 7aa:	99 85       	ldd	r25, Y+9	; 0x09
 7ac:	01 96       	adiw	r24, 0x01	; 1
 7ae:	99 87       	std	Y+9, r25	; 0x09
 7b0:	88 87       	std	Y+8, r24	; 0x08

void SSD1306_bitmap(uint8_t x,uint8_t y,const uint8_t *pBmp, uint8_t chWidth, uint8_t chHeight, uint8_t* buffer)
{
	uint8_t i, j, byteWidth = (chWidth + 7)/8;
	for(j = 0;j < chHeight;j++){
		for(i = 0;i <chWidth;i++){
 7b2:	8e 15       	cp	r24, r14
 7b4:	9f 05       	cpc	r25, r15
 7b6:	b1 f6       	brne	.-84     	; 0x764 <_Z14SSD1306_bitmaphhPKhhhPh+0xb8>
 7b8:	9f ef       	ldi	r25, 0xFF	; 255
 7ba:	69 1a       	sub	r6, r25
 7bc:	79 0a       	sbc	r7, r25
}

void SSD1306_bitmap(uint8_t x,uint8_t y,const uint8_t *pBmp, uint8_t chWidth, uint8_t chHeight, uint8_t* buffer)
{
	uint8_t i, j, byteWidth = (chWidth + 7)/8;
	for(j = 0;j < chHeight;j++){
 7be:	62 14       	cp	r6, r2
 7c0:	73 04       	cpc	r7, r3
 7c2:	09 f0       	breq	.+2      	; 0x7c6 <_Z14SSD1306_bitmaphhPKhhhPh+0x11a>
 7c4:	bd cf       	rjmp	.-134    	; 0x740 <_Z14SSD1306_bitmaphhPKhhhPh+0x94>
			if(pgm_read_byte(pBmp + j * byteWidth + i / 8) & (128 >> (i & 7))){
				SSD1306_pixel(x + i,y + j, 1, buffer);
			}
		}
	}		
}
 7c6:	29 96       	adiw	r28, 0x09	; 9
 7c8:	0f b6       	in	r0, 0x3f	; 63
 7ca:	f8 94       	cli
 7cc:	de bf       	out	0x3e, r29	; 62
 7ce:	0f be       	out	0x3f, r0	; 63
 7d0:	cd bf       	out	0x3d, r28	; 61
 7d2:	df 91       	pop	r29
 7d4:	cf 91       	pop	r28
 7d6:	1f 91       	pop	r17
 7d8:	0f 91       	pop	r16
 7da:	ff 90       	pop	r15
 7dc:	ef 90       	pop	r14
 7de:	df 90       	pop	r13
 7e0:	cf 90       	pop	r12
 7e2:	bf 90       	pop	r11
 7e4:	af 90       	pop	r10
 7e6:	9f 90       	pop	r9
 7e8:	8f 90       	pop	r8
 7ea:	7f 90       	pop	r7
 7ec:	6f 90       	pop	r6
 7ee:	5f 90       	pop	r5
 7f0:	4f 90       	pop	r4
 7f2:	3f 90       	pop	r3
 7f4:	2f 90       	pop	r2
 7f6:	08 95       	ret

000007f8 <_Z15SSD1306_displayPh>:

void SSD1306_display(uint8_t* buffer)
{
 7f8:	cf 93       	push	r28
 7fa:	df 93       	push	r29
 7fc:	ec 01       	movw	r28, r24
	command(SSD1306_COLUMNADDR);
 7fe:	81 e2       	ldi	r24, 0x21	; 33
 800:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
	command(0);         //cloumn start address
 804:	80 e0       	ldi	r24, 0x00	; 0
 806:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
	command(WIDTH -1); //cloumn end address
 80a:	8f e7       	ldi	r24, 0x7F	; 127
 80c:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
	command(SSD1306_PAGEADDR);
 810:	82 e2       	ldi	r24, 0x22	; 34
 812:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
	command(0);         //page atart address
 816:	80 e0       	ldi	r24, 0x00	; 0
 818:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
	command(PAGES -1); //page end address
 81c:	87 e0       	ldi	r24, 0x07	; 7
 81e:	0e 94 7e 02 	call	0x4fc	; 0x4fc <_Z7commandh>
//    digitalWrite(OLED_DC, HIGH);
	PORTB |= (1<<OLED_DC);
 822:	c3 9a       	sbi	0x18, 3	; 24
    SPIWrite(buffer, WIDTH * HEIGHT / 8);
 824:	60 e0       	ldi	r22, 0x00	; 0
 826:	74 e0       	ldi	r23, 0x04	; 4
 828:	ce 01       	movw	r24, r28
 82a:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_Z8SPIWritePhi>
}
 82e:	df 91       	pop	r29
 830:	cf 91       	pop	r28
 832:	08 95       	ret

00000834 <_exit>:
 834:	f8 94       	cli

00000836 <__stop_program>:
 836:	ff cf       	rjmp	.-2      	; 0x836 <__stop_program>
